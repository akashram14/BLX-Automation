- hosts: all
  vars_prompt:
          - name: services1
            prompt: "Enter the list of services like this name_of_service;IP_addr;type_of_service;port separated by comma"
            private: no
  remote_user: root
  become: yes
  gather_facts: false
  vars:
    iface: "enp0s3"    # ideally, we should fetch this with Nitin's script
    
    worker_processes: 2
    
    mgmt_http_port: 9080
    mgmt_https_port: 9443

  tasks:
    - name: Check if blx already exists
      stat:
        path: /root/blx-rpm-13.0-52.15.tar
      register: stat_result

    - name: Copy blx files to the remote systems
      copy:
        src: /home/rmkgvl/blx-rpm-13.0-52.15.tar
        dest: /root
      when: not stat_result.stat.exists

    - name: Extract blx tar file
      unarchive:
        src: /root/blx-rpm-13.0-52.15.tar
        dest: /root
        remote_src: yes

    - name: Make sure packages/dependencies are installed
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - systemd
          - httpd
          - crontabs
          - ethtool
          - glibc
          - libstdc++
          - libgcc
          - zlib
          - perl
          - perl-Sys-Syslog

    - name: Finding all the rpm files in the blx folder
      find:
        paths: "/root/blx-rpm-13.0-52.15.tar"
        patterns: "*.rpm"
      register: rpm_files
    - set_fact:
        rpm_list: "{{ rpm_files.files | map(attribute='path') | list}}"
    
    - name: RPM files list
      debug:
        var: rpm_files.stdout
    
   
    - name: Install blx rpm files
      shell: yum install blx*.rpm -y
      args:
        chdir: /root/blx-rpm-13.0-52.15/

    # not used currently
    - name: Fetch netmask
      shell: ifconfig | grep -Eo "netmask [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}" | awk '{print $2;}' | head -n 1
      register: netmask
    - debug:
        var: netmask.stdout

    # TODO: integrate this with blx config template
    - name: Fetch default gateway
      shell: route -n | awk '{print $2;}' | sed -n '3 p'
      register: gateway
    - debug:
        var: gateway['stdout']

    - name: gro gso off
      become: yes
      shell: 
        cmd: ethtool -K {{iface}} gro off gso off
    - name: BLX template
      template:
        src: ./blx.conf.j2
        dest: /etc/blx/blx.conf
        
     #
    - name: blx cli commands template
      template:
        src: ./blx.conf.j2
        dest: /etc/blx/blx.conf
      vars:
        #Ideally should be taken from user
        ips:
          - 192.168.1.10
          - 192.168.1.11
          - 192.168.1.12
          - 192.168.1.13
          - 192.168.1.14
        ports:
          - 81
          - 82
          - 83
          - 84
          - 85
    
  
    - name: start the blx service
      command: ifdown {{ iface }} && systemctl start blx
   
   # - name: status of blx service
   #   command: systemctl status blx
   #   register: status
   # - name: output
   #   debug: 
   #     var: status['stdout']
